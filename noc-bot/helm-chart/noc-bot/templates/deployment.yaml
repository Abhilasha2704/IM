apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ template "name" . }}
    type: deployment
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    environment: "{{ .Values.EnvironmentName }}"
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: {{ template "name" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailableReplicas }}
      maxSurge: {{ .Values.maxSurgeReplicas }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        name: {{ template "name" . }}
    spec:
      containers:
          - name: {{ template "name" . }}
            image: {{ .Values.imageRegistry }}/{{ .Values.imageTag }}
            imagePullPolicy: {{ .Values.imagePullPolicy }}
            env:
            - name: API_PATH
              value: "/api"
            - name: CURL_CA_BUNDLE
              value: ""
            - name: ZOOKEEPER_CONNECT_STRING
              value: ""
            - name: FLASK_APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: flaskAppSecret
            - name: FLASK_APP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: flaskAppToken
            - name: API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: startIncidentUsername
            - name: API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: startIncidentPassword
            - name: NEW_RELIC_LICENSE_KEY
              value: ""
            - name: SNIP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: snipApiKey
            - name: NEW_RELIC_APP_NAME
              value: {{ template "name" . }}
            - name: INTERNAL_CA_TRUSTCHAIN_CERT_PEM
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: scyllaCertChain
            - name: CASSANDRA_CONTACT_POINTS
              value: "scylla-im-scylla-client.im.svc"
            - name: CASSANDRA_APP_USER
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: scylladbUsername
            - name: CASSANDRA_APP_PW
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: scylladbPassword
            - name: CASSANDRA_APP_KEYSPACE
              value: {{ .Values.cassandraAppKeyspace }}
            - name: ZOOKEEPER_CONNECT_STRING
              value: ""
            # - name: OAUTH2_CLIENT_ID
            #   value: "{{ .Values.IBMidOauth2ClientId }}"
            # - name: OAUTH2_CLIENT_SECRET
            #   value: ""
            # - name: OAUTH2_IDENTITY_PROVIDER
            #   value: "ibmid"
            # - name: OAUTH2_ISSUER
            #   value: "{{ .Values.ibmidOAuthIssuer }}"
            - name: BOX_RELAY_API_CREDS
              value: ""
            - name: SAE_API_CREDS
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: saeApiKey
            - name: TMS_API_CREDS
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: tmsStartIncidentKey
            - name: PAGERDUTY_INTEGRATION_KEY
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: pagerDutyIntegrationKey
            - name: INCIDENT_MANAGER_SECRET
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: incidentManagerSecret
            - name: SLACK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: slackClientSecret
            - name: SLACK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: slackSigningSecret
            - name: SLACK_OAUTH_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: slackBotAccessToken
            - name: SLACK_BOT_USER_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: noc-bot
                  key: slackBotAccessToken
            ports:
            - containerPort: {{.Values.apiPort}}
              name: http
            livenessProbe:
              httpGet:
                path: /healthz
                port: {{.Values.apiPort}}
              initialDelaySeconds: 30
              periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /healthz
                port: {{.Values.apiPort}}
              initialDelaySeconds: 30
              periodSeconds: 15
            resources:
              requests:
                cpu: 20m
                memory: 64Mi
              limits:
                cpu: 500m
                memory: 128Mi
            volumeMounts:
              - name: secrets-store-inline
                mountPath: "/mnt/secrets-store"
              - name: properties
                mountPath: /config
              - name: intermediate-ca
                mountPath: "/opt/noc/conf/intermediate-ca"
                readOnly: true
      imagePullSecrets:
        - name: im-acr-key
        - name: bluemix-default-secret-regional
        - name: bluemix-default-secret-international
        # - name: all-icr-io
        # - name: default-icr-io
        # - name: default-us-icr-io
        # - name: default-uk-icr-io
        # - name: default-de-icr-io
        # - name: default-au-icr-io
        # - name: default-jp-icr-io
        # - name: bluemix-default-secret
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          volumeAttributes: 
            secreteProviderClass: azure-kvname-system-msi
      - name: properties
        configMap:
          name: {{ template "name" . }}
          items:
          - key: properties.yml
            path: properties.yml
      - name: intermediate-ca
        secret:
            secretName: intermediate-ca
            defaultMode: 0400
            items:
            - key: tls.crt
              path: ca-chain.cert.pem
